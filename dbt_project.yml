# dbt_project.yml
name: 'ordinary_shop'
version: '1.0.0'


profile: 'ordinary_shop'


model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  ##- "dbt_packages"

on-run-start: 'CREATE OR REPLACE TABLE `dbt-studies-462323.ordinary_shop_dbt.hook_went_rig` (
      log_id STRING DEFAULT GENERATE_UUID(),
      model_name STRING,
      event_timestamp TIMESTAMP,
      message STRING
    )'


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  ordinary_shop:
    # Config indicated by + and applies to all files under models/example/


    stg:
      +materialized: table
      +required_tests: {"unique.*|not_null": 1}
      +required_docs: true

      stg_ordinary__orders:
        +pre-hook: | 
          CREATE OR REPLACE TABLE `dbt-studies-462323.ordinary_shop_dbt.hook_went_right` (
            log_id STRING DEFAULT GENERATE_UUID(),
            model_name STRING,
            event_timestamp TIMESTAMP,
            message STRING
          )
       
      ##+schema: "{{ var('override_schema', 'stg_schema') }}"
      ##+schema: stg_schema # understood as custom_schema on macro generate_schema_name
    int:
      +materialized: view
      +schema: int_schema # understood as custom_schema on macro generate_schema_name
    mart:
      +materialized: table

  # setting test configs on project level configuration
  tests:
    stg:
      +severity: warn
      +store_failures: true

seeds:
  ordinary_shop:
    +schema: seed_schema


      
